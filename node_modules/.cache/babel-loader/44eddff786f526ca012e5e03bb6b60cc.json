{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jorge.escobar\\\\Desktop\\\\personal projects\\\\weane\\\\src\\\\Components\\\\Weather\\\\weatherCard.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchWeatherAction } from '../../actions/weatherActions';\n\nfunction Weather() {\n  // conditional to always return the state value, because first time the vale is undefined\n  const location = useSelector(state => state.location.location[0].location === undefined ? state.location.location[0] : state.location.location[0].location);\n  const temperature = useSelector(state => state.weather.weather[0] === undefined ? state.weather.weather[0] : state.weather.weather[0].temp);\n  const description = useSelector(state => state.weather.weather[0] === undefined ? state.weather.weather[0] : state.weather.weather[0].description);\n  const icon = useSelector(state => state.weather.weather[0] === undefined ? state.weather.weather[0] : state.weather.weather[0].icon);\n  const weatherIcon = \"http://openweathermap.org/img/wn/\".concat(icon, \"@2x.png\");\n  const dispatch = useDispatch();\n\n  const addWeather = weather => dispatch(searchWeatherAction(weather));\n\n  const searchWeater = async () => {\n    const appid = '36e2fa16b70a4422ed609a5ad91f71f5';\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(location, \"&APPID=\").concat(appid, \"&units=metric\");\n    const response = await fetch(url);\n    const result = await response.json();\n    console.log(result.sys.country);\n    addWeather({\n      city: result.name,\n      country: result.sys.country,\n      temp: result.main.temp,\n      min_tem: result.main.temp_min,\n      max_temp: result.main.temp_max,\n      pressure: result.main.pressure,\n      humidity: result.main.humidity,\n      description: result.weather[0].description,\n      icon: result.weather[0].icon\n    });\n  };\n\n  useEffect(() => {\n    searchWeater();\n  });\n  return React.createElement(\"a\", {\n    href: \"#!\",\n    className: \"home_card container child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, location)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, temperature), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, description))), React.createElement(\"div\", {\n    className: \"child weather_icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: weatherIcon,\n    alt: icon,\n    height: \"100\",\n    width: \"100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n}\n\nexport default Weather;","map":{"version":3,"sources":["C:\\Users\\jorge.escobar\\Desktop\\personal projects\\weane\\src\\Components\\Weather\\weatherCard.js"],"names":["React","useEffect","useDispatch","useSelector","searchWeatherAction","Weather","location","state","undefined","temperature","weather","temp","description","icon","weatherIcon","dispatch","addWeather","searchWeater","appid","url","response","fetch","result","json","console","log","sys","country","city","name","main","min_tem","temp_min","max_temp","temp_max","pressure","humidity"],"mappings":"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","sourcesContent":["import React, { useEffect, } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { searchWeatherAction } from '../../actions/weatherActions';\r\n\r\n\r\nfunction Weather() {\r\n\r\n    // conditional to always return the state value, because first time the vale is undefined\r\n    const location = useSelector(state => state.location.location[0].location === undefined ? state.location.location[0] : state.location.location[0].location);\r\n    const temperature = useSelector(state => state.weather.weather[0] === undefined ? state.weather.weather[0] : state.weather.weather[0].temp);\r\n    const description = useSelector(state => state.weather.weather[0] === undefined ? state.weather.weather[0] : state.weather.weather[0].description);\r\n    const icon = useSelector(state => state.weather.weather[0] === undefined ? state.weather.weather[0] : state.weather.weather[0].icon);\r\n\r\n    const weatherIcon = `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n    \r\n    const dispatch = useDispatch();\r\n    const addWeather = (weather) => dispatch(searchWeatherAction(weather));\r\n\r\n    const searchWeater = async () => {\r\n        const appid = '36e2fa16b70a4422ed609a5ad91f71f5';\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${appid}&units=metric`;\r\n        const response = await fetch(url);\r\n        const result = await response.json();\r\n        console.log(result.sys.country)\r\n        addWeather({\r\n            city: result.name,\r\n            country: result.sys.country,\r\n            temp: result.main.temp,\r\n            min_tem: result.main.temp_min,\r\n            max_temp: result.main.temp_max,\r\n            pressure: result.main.pressure,\r\n            humidity: result.main.humidity,\r\n            description: result.weather[0].description,\r\n            icon: result.weather[0].icon,\r\n        });\r\n    }\r\n    \r\n    useEffect(() => {\r\n        searchWeater();\r\n    })\r\n    return (\r\n        <a href=\"#!\" className=\"home_card container child\">\r\n            <div className=\"child\">\r\n                <header >\r\n                    <h2>{location}</h2>\r\n                </header>\r\n                <div>\r\n                    <h4>{temperature}</h4>\r\n                    <h4>{description}</h4>\r\n                </div>\r\n            </div>\r\n            <div className=\"child weather_icon\">\r\n                <img src={weatherIcon} alt={icon} height=\"100\" width=\"100\" />\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}